def count_digraphs (ciphertext)
	# divide text into an array of pairs
	pairs = ciphertext.split(' ')
	di_count = Hash.new(0)
	pairs.each do |d|
		di_count[d] = di_count[d] + 1
	end
	sorted = di_count.sort_by {|digraph, count| count}
	puts sorted
end


ciphertext = "PO BH SV AS CM SE PO SE HS BK OD RM BP LT DR RU XG AP MK FE BL SM ML GL BX BP RU QU HC HX MK UP HR FV VS GW OF YG CM LE WE CM LP CM BP OD RM BP IQ RD PH FL NT AP NG UP QA DB RD EI BP BC PH UP HR CD BP EK HS PD SB DC CA RD EK FV GW WP UQ CD CO PO CM SH ZB PB LB TO AC SM KB FV UK PO CB HR EL CB CM SE FY SB NG UE LD CA EI FV VP PO FV AF EL RD TO FQ IW WL NQ QM XB TN SD YC SD BN SF EI FK VC AP FQ IQ CA CM SA EL KT SH HI CB VA NG HB EY BL HL FE OF PO BE PW PQ KI GW WP QX FE OF PO BE PW PQ WS FY SB FQ FD BP ZS FA NE ZB NG UR VO FV CA XA QZ LR KV SE BS BZ HS BK PQ CD IZ BE PW PQ VK WU QA GW WP QX FK PO DK BN LX FE KZ WL NT FA VC VK PU TW WQ CT OP YL GW WP QX HM OB MF FQ GW XA YG CM WQ DL VA LQ QI SV OP XG FV OW QA GW WP QX BE PW PQ XI FV OW RD PH FB PT IM OF AL VA QI LE LQ LE PO IL DB VA FQ MU NB KF KM PO BD PG GQ BK BD SH KM BK PH EL OM SB DB EW EA NB EY BL VA XH PT KL YE GQ RA FV KF RD PH UW OB UD PH BZ FA MK GQ VF EB EP PW WG LQ OF AI NP HT BN HB OP IM RU PG FV OW QA GW WP QX UR GM HI CZ CM BC SL FB TP QL YE CM AH HS AU BN SL PZ NB OF AC UR GM CZ CM QI FQ BK OT HB RD BD GQ RD PH AL VA QI NF GR KL GN QB TP HQ UR IM NU TO FQ OU IM EP CM SA FV TF BN EP SB YE FQ OG AH GS BC MP WL HI CM HE TO XA LQ MD PH UW NT PG GQ GT EP SG CS EN AP ZO MK SB CM LX PN AF EW BU PH XG GS HX EL KQ OF CM AH PB PD IF BN EP ES PB HM HB RD CA BL RM PB CH BR LC BS BD ZC PH CH VA NG CM HX BP GN ZR FV EH CM SH YH OP IM QG AK RU ZC AC SZ EF MH IE CB XC QH OF BS QF PN LQ KL EN GP PA OE SV BP "
count_digraphs(ciphertext)